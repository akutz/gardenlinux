apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-gardenlinux-task
spec:
  params:
    - name: 'suite'
      type: 'string'
      default: 'bullseye'
      description: 'Debian release (buster, bullseye, ..)'
    - name: 'architecture'
      type: 'string'
      description: 'the build architecture (currently, only amd64 is supported)'
      default: 'amd64'
    - name: 'platform'
      type: 'string'
      description: 'the target platform (aws, gcp, metal, kvm, ..)'
    - name: 'modifiers'
      type: 'string'
      description: 'the build modifiers'
    - name: 'giturl'
      type: 'string'
      default: 'ssh://git@github.com/gardenlinux/gardenlinux'
      description: 'git repository url'
    - name: 'committish'
      type: 'string'
      description: 'the committish to build'
      default: 'main'
    - name: 'gardenlinux_epoch'
      type: 'string'
      description: 'the gardenlinux epoch to use for as snapshot repo timestamp'
    - name: 'snapshot_timestamp'
      type: 'string'
      description: 'the snapshot timestamp (calculated from gardenlinux_epoch)'
    - name: 'repodir'
      description: 'path to gardenlinux repository worktree'
      default: '/workspace/gardenlinux_git'
    - name: 'cicd_cfg_name'
      description: 'the cicd cfg to use (see cicd.yaml)'
      default: 'default'
    - name: 'outfile'
      description: 'build result file (parameter is used to pass between steps)'
      type: 'string'
      default: '/workspace/gardenlinux.out'
    - name: 'version'
      description: 'the target version to build / release'
      type: 'string'
    - name: 'flavourset'
      description: 'the flavourset name this task is a part of'
      type: 'string'
      default: 'all'
    - name: 'publishing_actions'
      description: 'how artifacts should be published (glci.model.PublishingAction)'
      type: 'string'
      default: 'manifests'
    - name: 'promote_target'
      description: 'the promotion target (snapshots|daily|release)'
      type: 'string'
      default: 'snapshots'
    - name: 'build_image'
      description: 'the container image for gardenlinux build (dynamically created)'
      type: 'string'
      default: 'xxx_eu.gcr.io/gardener-project/gardenlinux/gardenlinux-build-image:377.0.0'
  steps:
    - name: 'retrieve-repository' # patched-in through render_task.py
    - name: 'pre-build'           # patched-in through render_task.py
    - name: 'build-image'
      resources:
        requests:
          memory: 1Gi
        limits:
          memory: 1.5Gi
      securityContext:
        privileged: true
        allowPrivilegeEscalation: true
        capabilities:
          add:
            - 'SYS_ADMIN'
      image: $(params.build_image)
      script: |
        #!/usr/bin/env sh
        set -u
        set -x
        if [ -f '/workspace/skip_build' ]; then
          echo 'found /workspace/skip_build - skipping build'
          exit 0
        fi
        suite="$(params.suite)"
        gardenlinux_epoch='$(params.gardenlinux_epoch)'
        timestamp='$(params.snapshot_timestamp)'
        features="$(params.platform),$(params.modifiers)"
        echo "features: ${features}"
        ls -la /build
        export OUT_FILE="$(params.outfile)"

        pwd
        echo "running build.."
        $(params.repodir)/bin/garden-build.sh \
          --arch $(params.architecture) \
          --commitid '$(params.committish)' \
          --suite $(params.suite) \
          --gardenversion "$(params.version)" \
          --features "${features}"
        ls -la "${OUT_FILE}"
        tar tf "${OUT_FILE}"
        if [ -f "${OUT_FILE}" ]; then
          echo "seems, like we might have succeeded?"
        else
          echo "no archive was created - see build log above for errors"
          exit 1
        fi
      volumeMounts:
      - mountPath: '/dev'
        name: 'dev'
      - mountPath: '/build'
        name: 'build'

    - name: 'upload-results' # patched-in through render_task.py

  volumes:
    - name: dev
      hostPath:
        path: '/dev'
        type: 'Directory'
    - name: build
      emptyDir:
        medium: "Memory"
